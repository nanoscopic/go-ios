on:
  push:
    branches:
      - main
name: Release-Go-iOS
jobs:
  build_on_mac:
    runs-on: macos-latest
    steps:
      - name: Create Release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_schema: semantic
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          brew install gnu-sed
          alias sed=gsed
          gsed -i 's/version \= \"local-build\"/version = \"${{ steps.create_release.outputs.current_tag }}\"/' main.go
          mkdir bin
          go build -ldflags="-s -w" -o bin/ios
          echo ${{ steps.create_release.outputs.current_tag }} > release_tag
          zip -j go-ios-mac.zip bin/ios release_tag
      - name: upload the macos build
        uses: actions/upload-artifact@v2
        with:
          name: macos-build
          path: go-ios-mac.zip
          retention-days: 1
  build_on_linux_and_release:
    runs-on: ubuntu-latest
    needs: build_on_mac
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download mac release from previous job
        uses: actions/download-artifact@v2
        with:
          name: macos-build
          path: ./mac-bin
      - name: Download and package mac binary
        run: |
          unzip go-ios-mac.zip
          echo "release_tag="$(cat release_tag) >> $GITHUB_ENV
          rm go-ios-mac.zip
          zip -j go-ios-mac.zip ios
        working-directory: ./mac-bin
      - name: Build
        run: |
          sed -i 's/version \= \"local-build\"/version = \"${{ env.release_tag }}\"/' main.go
          mkdir bin
          go build -ldflags="-s -w" -o bin/ios
          cp ./mac-bin/go-ios-mac.zip .
          zip -j go-ios-linux.zip bin/ios
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: "*.zip"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ env.release_tag }}
